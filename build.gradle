plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'com.shazzar'
version = '1.0.0'
description = 'A simple DateTime utilities library for Java'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Maven Publishing Configuration
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifactId = 'datetime-utils'

            pom {
                name = 'DateTime Utils'
                description = 'A simple and intuitive DateTime utilities library for Java'
                url = 'https://github.com/yourusername/datetime-utils'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'shazzar'
                        name = 'Daniel Oguejiofor'
                        email = 'nielnonso@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/yourusername/datetime-utils.git'
                    developerConnection = 'scm:git:ssh://github.com/yourusername/datetime-utils.git'
                    url = 'https://github.com/yourusername/datetime-utils'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

// Signing configuration (required for Maven Central)
signing {
    sign publishing.publications.mavenJava
}
